{"version":3,"sources":["file:///D:/Creator/source/Test/assets/AnimationGraphComponent.ts"],"names":["_decorator","animation","ccclass","property","AnimationGraphComponent","StateMachineComponent","onMotionStateEnter","controller","motionStateStatus","onMotionStateExit","onMotionStateUpdate","onStateMachineEnter","onStateMachineExit"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAA6BC,MAAAA,S,OAAAA,S;;;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBH,U;;yCAGjBI,uB,WADZF,OAAO,CAAC,yBAAD,C,gBAAR,MACaE,uBADb,SAC6CH,SAAS,CAACI,qBADvD,CAC6E;AAEzE;AACJ;AACA;AACA;AACA;AACWC,QAAAA,kBAAkB,CAAEC,UAAF,EAA6CC,iBAA7C,EAA6G,CAClI;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACWC,QAAAA,iBAAiB,CAAEF,UAAF,EAA6CC,iBAA7C,EAA6G,CACjI;AACH;AAED;AACJ;AACA;AACA;AACA;;;AACWE,QAAAA,mBAAmB,CAAEH,UAAF,EAA6CC,iBAA7C,EAA6G,CACnI;AACH;AAED;AACJ;AACA;AACA;;;AACWG,QAAAA,mBAAmB,CAAEJ,UAAF,EAA6C,CACnE;AACH;AAED;AACJ;AACA;AACA;;;AACWK,QAAAA,kBAAkB,CAAEL,UAAF,EAA6C,CAClE;AACH;;AA3CwE,O","sourcesContent":["import { _decorator, Component, Node, animation } from \"cc\";\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass(\"AnimationGraphComponent\")\r\nexport class AnimationGraphComponent extends animation.StateMachineComponent {\r\n    \r\n    /**\r\n     * Called right after a motion state is entered.\r\n     * @param controller The animation controller it within.\r\n     * @param motionStateStatus The status of the motion.\r\n     */\r\n    public onMotionStateEnter (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\r\n        // Can be overrode\r\n    }\r\n\r\n    /**\r\n     * Called when a motion state is about to exit.\r\n     * @param controller The animation controller it within.\r\n     * @param motionStateStatus The status of the motion.\r\n     */\r\n    public onMotionStateExit (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\r\n        // Can be overrode\r\n    }\r\n\r\n    /**\r\n     * Called when a motion state updated except for the first and last frame.\r\n     * @param controller The animation controller it within.\r\n     * @param motionStateStatus The status of the motion.\r\n     */\r\n    public onMotionStateUpdate (controller: animation.AnimationController, motionStateStatus: Readonly<animation.MotionStateStatus>): void {\r\n        // Can be overrode\r\n    }\r\n\r\n    /**\r\n     * Called right after a state machine is entered.\r\n     * @param controller The animation controller it within.\r\n     */\r\n    public onStateMachineEnter (controller: animation.AnimationController) {\r\n        // Can be overrode\r\n    }\r\n\r\n    /**\r\n     * Called right after a state machine is entered.\r\n     * @param controller The animation controller it within.\r\n     */\r\n    public onStateMachineExit (controller: animation.AnimationController) {\r\n        // Can be overrode\r\n    }\r\n    \r\n}\r\n"]}