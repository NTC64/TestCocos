{"version":3,"sources":["file:///D:/Creator/source/Test/assets/script/collision.ts"],"names":["_decorator","Component","Collider2D","Contact2DType","Node","Color","Sprite","Label","director","Square","Screen","sounds","ccclass","property","collier","type","score","highestScore","checkGameOver","onLoad","localStorage","setItem","toString","start","collider","getComponent","on","BEGIN_CONTACT","onBeginContact","selfCollider","ortherCollider","contact","name","color","toHEX","scoreNode","string","clip","onAudioQueue","showScore","screen","hideAllSquares","pause","resetScore","resultNode","getChildByName","active","tryAgainNode","getItem","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component,Collider2D,Contact2DType,IPhysics2DContact ,Node,Color, Sprite, Label, find, director, Prefab, instantiate, Scene } from 'cc';\r\nimport { Square } from './square';\r\nconst { ccclass, property } = _decorator;\r\nimport { Screen } from './scene';\r\nimport { sounds } from './sounds';\r\n@ccclass('collier')\r\nexport class collier extends Component {\r\n    @property(sounds)\r\n    public clip: sounds;\r\n    @property({ type: Node })\r\n    scoreNode: Node = null;\r\n    @property({ type: Node })\r\n    resultNode: Node = null;\r\n    @property({ type: Node })\r\n    lineNode: Node = null;\r\n    @property({ type: Node })\r\n    circleNode: Node = null;\r\n    @property({ type: Square })\r\n    squareNode: Square = null;\r\n    @property({ type: Node })\r\n    tryAgainNode: Node = null;\r\n    @property({ type: Node })\r\n    gameNode: Node = null;\r\n    @property({ type: Screen })\r\n    screen: Screen = null;\r\n    public score: number=0;\r\n    private highestScore: number = 0;\r\n    private checkGameOver:boolean=false;\r\n    onLoad(){\r\n        localStorage.setItem(\"best\",this.highestScore.toString());\r\n        this.checkGameOver=false;\r\n    }\r\n    start() {\r\n        let collider=this.getComponent(Collider2D);\r\n        collider.on(Contact2DType.BEGIN_CONTACT,this.onBeginContact,this);\r\n    }\r\n    onBeginContact(selfCollider: Collider2D, ortherCollider: Collider2D,contact:IPhysics2DContact | null){\r\n        if(ortherCollider.name===\"square<BoxCollider2D>\" && ortherCollider.getComponent(Sprite).color.toHEX()==='dd4247'){\r\n           this.score++;\r\n         \r\n           ortherCollider.getComponent(Sprite).color=new Color(255,255,255,0);\r\n          \r\n           this.scoreNode.getComponent(Label).string=this.score.toString();\r\n           this.clip.onAudioQueue(2);\r\n        }\r\n        else{\r\n            // this.squareNode.squareDestroy();\r\n            this.showScore();\r\n           this.screen.hideAllSquares();\r\n            director.pause();\r\n            this.clip.onAudioQueue(5)\r\n            \r\n            this.resetScore();\r\n        }\r\n    }\r\n    showScore(){\r\n        this.resultNode.getChildByName(\"backgroundResults\").active=true;\r\n        this.resultNode.getChildByName(\"topScore\").active=true;\r\n        this.resultNode.getChildByName(\"endScore\").active=true;\r\n        this.tryAgainNode.active=true;\r\n        if (this.score > this.highestScore) {\r\n            this.highestScore = this.score;\r\n            localStorage.setItem(\"best\",this.highestScore.toString());\r\n            this.clip.onAudioQueue(3);\r\n        }\r\n        this.resultNode.getChildByName(\"topScore\").getComponent(Label).string =\"Top score: \"+ localStorage.getItem(\"best\");\r\n        this.resultNode.getChildByName(\"endScore\").getComponent(Label).string=this.score.toString();\r\n        \r\n    }\r\n    resetScore(){\r\n        this.score=0;\r\n        this.scoreNode.getComponent(Label).string=\"0\";\r\n    }\r\n    update(deltaTime: number) {\r\n     \r\n    }\r\n}\r\n\r\n\r\n"]}